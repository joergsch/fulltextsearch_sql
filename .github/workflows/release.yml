name: Publish Release
on:
  push:
    tags:
      - 'v*'

permissions:
  packages: write
  contents: write

jobs:
  test:
    uses: ./.github/workflows/test.yml
  build:
    runs-on: ubuntu-latest
    needs: [test]

    if: ${{ github.repository_owner == 'jplitza' }}

    steps:
      - name: Check actor permission
        uses: skjnldsv/check-actor-permission@69e92a3c4711150929bca9fcf34448c5bf5526e7 # v3.0
        with:
          require: write

      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v5

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create release archive
        run: >
          tar -cf - \
            --exclude '.git*' \
            --exclude 'composer.*' \
            --exclude 'renovate.json' \
            --transform 's/^\./${{env.APP_NAME}}/' \
            --sort=name \
            --format=posix \
            --pax-option='delete=atime,delete=ctime' \
            --mtime="$(git show --no-patch --format=%ci HEAD)" \
            --numeric-owner --owner=0 --group=0 \
            --mode='go+u,go-w' \
            . \
            | gzip --no-name --best \
            > ${{runner.temp}}/${{env.APP_NAME}}.tar.gz
      
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{runner.temp}}/${{env.APP_NAME}}.tar.gz

      - name: Update app in Nextcloud app catalog
        run: |
          echo "$KEY" > "$RUNNER_TEMP/$APP_NAME.key"
          curl -X POST \
            -H "Authorization: Token $TOKEN" \
            https://apps.nextcloud.com/api/v1/apps/releases \
            -H "Content-Type: application/json" \
            -d@- <<EOF
          {
            "download": "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/$GITHUB_REF_NAME/$APP_NAME.tar.gz",
            "signature": "$(openssl dgst -sha512 -sign "$RUNNER_TEMP/$APP_NAME.key" "$RUNNER_TEMP/$APP_NAME.tar.gz" | openssl base64)"
          }
          EOF
        env:
          TOKEN: ${{ secrets.NEXTCLOUD_APPSTORE_API_TOKEN }}
          KEY: ${{ secrets.NEXTCLOUD_APPSTORE_KEY }}